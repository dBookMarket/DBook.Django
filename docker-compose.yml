version: '3.3'

services:

  db:
    image: mysql:${DB_VERSION}
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql:rw

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"

  server:
    build:
      context: backend
      args:
        PYTHON_VERSION: ${PYTHON_VERSION}
    image: dbook-server:${VERSION}
    restart: unless-stopped
    command: bash -c 'python checkdbconnection.py && ./startserver.sh'
    environment:
      DEBUG: ${DEBUG}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      ADMIN_NAME: ${ADMIN_NAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      NFT_STORAGE_ACCESS_TOKEN: ${NFT_STORAGE_ACCESS_TOKEN}
#      REDIS_HOST: ${REDIS_HOST}
#      REDIS_PORT: ${REDIS_PORT}
#      REDIS_DB: ${REDIS_DB}
    ports:
      - "8000:8000"
    depends_on:
      - db
#      - redis
    links:
      - db
    volumes:
      - media_file:/code/media:rw
      - static_file:/code/static:rw
      - ./logs/:/code/logs/:rw

#  redis:
#    build:
#      context: ./redis
#      args:
#        REDIS_VERSION: ${REDIS_VERSION}
#    image: epic-redis:${VERSION}
#    restart: unless-stopped
#    ports:
#      - "6379:6379"
#    privileged: true
#    command: sh -c "./start.sh"

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    image: dbook-nginx:${VERSION}
    restart: unless-stopped
    volumes:
      - static_file:/uploads/static
      - media_file:/uploads/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    links:
      - server

volumes:
  db_data: { }
  media_file: { }
  static_file: { }