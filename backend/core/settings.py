"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--+q!d44_5n2_aedxv3+(sdb$-jm)3@byjj%$7z4)g8*j00g7b9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.getenv('DEBUG', 1))

ALLOWED_HOSTS = ['*']

# Application definition
D_BOOK_APPS = [
    'accounts',
    'books',
    'stores',
    'utils'
]
THIRD_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'rest_swagger',
    'guardian',
    'django_apscheduler',
    'corsheaders'
]
INSTALLED_APPS = [
                     'grappelli',  # admin skin
                     'django.contrib.admin',
                     'django.contrib.auth',
                     'django.contrib.contenttypes',
                     'django.contrib.sessions',
                     'django.contrib.messages',
                     'django.contrib.staticfiles',
                 ] + D_BOOK_APPS + THIRD_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # cors
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'sqlite': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME', 'd-book'),
        'USER': os.getenv('DB_USER', 'dev'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'dev@2021'),
        'HOST': os.getenv('DB_HOST', '127.0.0.1'),
        'PORT': os.getenv('DB_PORT', '3306'),
        'OPTIONS': {'charset': 'utf8mb4'}
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'staticfiles')
]

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

TEMPORARY_DIR = 'tmp'
TEMPORARY_ROOT = os.path.join(MEDIA_ROOT, TEMPORARY_DIR)
PREVIEW_DIR = 'previews'
PREVIEW_DOC_ROOT = os.path.join(MEDIA_ROOT, PREVIEW_DIR)

ENCRYPTION_URL = 'file'
ENCRYPTION_ROOT = os.path.join(BASE_DIR, 'file')

PRIVATE_KEY_DIR = 'private_keys'
PUBLIC_KEY_DIR = 'public_keys'
KEY_DICT_DIR = 'key_dicts'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'

ATOMIC_REQUESTS = True

APPEND_SLASH = False

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # this is default
    'authens.backends.MetaMaskBackend',
    'guardian.backends.ObjectPermissionBackend'
]

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'accounts.authentication.BaseTokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        # 'authorities.permissions.IsOwnerOrAuthorized',
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        # 'rest_framework.permissions.AllowAny'
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
    ],
    'DEFAULT_PAGINATION_CLASS': 'utils.pagination.CustomPagination',
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 10,

    'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",  # "Y-m-d G:i:s"
    'DATE_FORMAT': "%Y-%m-%d",
    'TIME_FORMAT': "%H:%M:%S",

    'UPLOADED_FILES_USE_URL': True,

    'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    # rate limiting
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '10000/day',
        'user': '60/min'
    }
}

LOGGING = {
    'version': 1.0,
    'disable_existing_loggers': False,
    'propagate': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'formatter': 'verbose',
            'filename': os.path.join(BASE_DIR, 'logs', 'debug.log'),
            'when': 'midnight',
            'interval': 1,
            'backupCount': 1
        },
        'gunicorn_error': {
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 1024 * 1024 * 600,
            'backupCount': 1,
            'formatter': 'verbose',
            'filename': os.path.join(BASE_DIR, 'logs', 'gunicorn.error.log')
        },
        'gunicorn_access': {
            'class': 'logging.handlers.RotatingFileHandler',
            'maxBytes': 1024 * 1024 * 600,
            'backupCount': 1,
            'formatter': 'verbose',
            'filename': os.path.join(BASE_DIR, 'logs', 'gunicorn.access.log')
        }
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'DEBUG'
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': False
        },
        'gunicorn.error': {
            'handlers': ['gunicorn_error'],
            'level': 'DEBUG',
            'propagate': True,
            'qualname': 'gunicorn.error'
        },
        'gunicorn.access': {
            'handlers': ['gunicorn_access'],
            'level': 'INFO',
            'propagate': False,
            'qualname': 'gunicorn.access'
        }
    }
}

# swagger
SWAGGER_SETTINGS = {
    'LOGIN_URL': 'rest_framework:login',
    'LOGOUT_URL': 'rest_framework:logout',
    'USE_SESSION_AUTH': True,
    'DOC_EXPANSION': 'list',
    'APIS_SORTER': 'alpha',
    'SECURITY_DEFINITIONS': None,
}

# nft.storage
# NFT_STORAGE = {
#     'SUFFIX': 'ipfs.nftstorage.link',
#     'PREFIX': 'https://ipfs.io/ipfs',
#     'ACCESS_TOKEN': os.getenv('NFT_STORAGE_ACCESS_TOKEN', '')
# }

# contract
CONTRACT_SETTINGS = {
    'PLATFORM_CONTRACT_ADDRESS': '0x662E48096EA75f1F5CfF8cF286BAD19278368B6a',
    'PLATFORM_CONTRACT_ABI': '''
    [{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},
    {"indexed":false,"internalType":"uint256","name":"nftId","type":"uint256"},
    {"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},
    {"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},
    {"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},
    {"indexed":false,"internalType":"address","name":"publisherAddress","type":"address"},
    {"indexed":false,"internalType":"uint256","name":"publisherRatio","type":"uint256"}],"name":"Issue","type":"event"},
    {"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"seller","type":"address"},
    {"indexed":false,"internalType":"address","name":"receiver","type":"address"},
    {"indexed":false,"internalType":"uint256","name":"nftId","type":"uint256"},
    {"indexed":false,"internalType":"uint256","name":"nftAmount","type":"uint256"},
    {"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},
    {"indexed":false,"internalType":"uint256","name":"tradeValue","type":"uint256"},
    {"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"Trade","type":"event"},
    {"inputs":[{"internalType":"address","name":"token1155","type":"address"},
    {"internalType":"address","name":"token20","type":"address"},
    {"internalType":"string","name":"version","type":"string"}],
    "name":"__DBookPlatform_init","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"minter","type":"address"}],
    "name":"addAuth","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"minter","type":"address"}],
    "name":"delAuth","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[],"name":"getFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],
    "stateMutability":"view","type":"function"},
    {"inputs":[],"name":"getFrozen","outputs":[{"internalType":"bool","name":"","type":"bool"}],
    "stateMutability":"view","type":"function"},
    {"inputs":[],"name":"getIssueList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],
    "stateMutability":"view","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"}],
    "name":"getNftPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],
    "stateMutability":"view","type":"function"},{"inputs":[],"name":"getPlatformAddress",
    "outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},
    {"inputs":[],"name":"getPlatformRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],
    "stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"}],
    "name":"getPublisherAddress","outputs":[{"internalType":"address","name":"","type":"address"}],
    "stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"}],
    "name":"getPublisherRatio","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],
    "stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion",
    "outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},
    {"inputs":[{"internalType":"address","name":"to","type":"address"},
    {"internalType":"uint256","name":"nftId","type":"uint256"},
    {"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},
    {"internalType":"uint256","name":"price","type":"uint256"},
    {"internalType":"address","name":"publisherAddress","type":"address"},
    {"internalType":"uint256","name":"publisherRatio","type":"uint256"}],
    "name":"issue","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],
    "name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"bool","name":"isFrozen","type":"bool"}],"name":"setFrozen","outputs":[],
    "stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"},
    {"internalType":"uint256","name":"price","type":"uint256"}],
    "name":"setNftPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"platformAddress","type":"address"}],
    "name":"setPlatformAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"platformRatio","type":"uint256"}],
    "name":"setPlatformRatio","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"},
    {"internalType":"address","name":"publishAddress","type":"address"}],
    "name":"setPublisherAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"nftId","type":"uint256"},
    {"internalType":"uint256","name":"publishRatio","type":"uint256"}],"name":"setPublisherRatio","outputs":[],
    "stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"string","name":"version","type":"string"}],
    "name":"setVersion","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"address",
    "name":"receiver","type":"address"},{"internalType":"uint256","name":"nftId","type":"uint256"},
    {"internalType":"uint256","name":"nftAmount","type":"uint256"},{"internalType":"bytes",
    "name":"data","type":"bytes"},{"internalType":"uint256","name":"tradeValue","type":"uint256"},
    {"internalType":"uint256","name":"fee","type":"uint256"}],
    "name":"trade","outputs":[],"stateMutability":"nonpayable","type":"function"}]
    ''',
    'NFT_CONTRACT_ADDRESS': '0xa18C1feF1F76a554cD716096f39a051cf4F94523',
    'NFT_CONTRACT_ABI': '''
    [{"inputs":[{"internalType":"string","name":"name","type":"string"},
    {"internalType":"string","name":"symbol","type":"string"},
    {"internalType":"string","name":"uri","type":"string"}],
    "stateMutability":"nonpayable","type":"constructor"},
    {"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},
    {"indexed":true,"internalType":"address","name":"operator","type":"address"},
    {"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],
    "name":"ApprovalForAll","type":"event"},
    {"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},
    {"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],
    "name":"OwnershipTransferred","type":"event"},
    {"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},
    {"indexed":true,"internalType":"address","name":"from","type":"address"},
    {"indexed":true,"internalType":"address","name":"to","type":"address"},
    {"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},
    {"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],
    "name":"TransferBatch","type":"event"},
    {"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},
    {"indexed":true,"internalType":"address","name":"from","type":"address"},
    {"indexed":true,"internalType":"address","name":"to","type":"address"},
    {"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},
    {"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},
    {"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},
    {"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},
    {"inputs":[{"internalType":"address","name":"account","type":"address"},
    {"internalType":"uint256","name":"id","type":"uint256"}],
    "name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],
    "stateMutability":"view","type":"function"},
    {"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},
    {"internalType":"uint256[]","name":"ids","type":"uint256[]"}],
    "name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],
    "stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},
    {"internalType":"address","name":"operator","type":"address"}],
    "name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],
    "stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},
    {"internalType":"uint256","name":"tokenId","type":"uint256"},
    {"internalType":"uint256","name":"amount","type":"uint256"},
    {"internalType":"bytes","name":"data","type":"bytes"}],
    "name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],
    "stateMutability":"view","type":"function"},{"inputs":[],"name":"owner",
    "outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},
    {"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"from","type":"address"},
    {"internalType":"address","name":"to","type":"address"},
    {"internalType":"uint256[]","name":"ids","type":"uint256[]"},
    {"internalType":"uint256[]","name":"amounts","type":"uint256[]"},
    {"internalType":"bytes","name":"data","type":"bytes"}],
    "name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"from","type":"address"},
    {"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},
    {"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],
    "name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"operator","type":"address"},
    {"internalType":"bool","name":"approved","type":"bool"}],
    "name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"address","name":"platformAddress","type":"address"}],
    "name":"setPlatformAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],
    "name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],
    "stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol",
    "outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},
    {"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],
    "name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},
    {"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],
    "name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],
    "stateMutability":"view","type":"function"}]
    ''',
    'USDC_CONTRACT_ADDRESS': '0xB556b362EC02d2384F4645d7160562538fdf40c4',
    'USDC_CONTRACT_ABI': '''
    [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ]
    ''',
}

# cors
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https?://(.+\.)?ddid\.\w+$",
    r"^https?://127\.0\.0\.1(:\d+)?$",
    r"^https?://localhost(:\d+)?$"
]
# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_METHODS = [
#     "DELETE",
#     "GET",
#     "OPTIONS",
#     "PATCH",
#     "POST",
#     "PUT",
# ]
#
# CORS_ALLOW_HEADERS = [
#     "accept",
#     "accept-encoding",
#     "authorization",
#     "content-type",
#     "dnt",
#     "origin",
#     "user-agent",
#     "x-csrftoken",
#     "x-requested-with",
# ]
